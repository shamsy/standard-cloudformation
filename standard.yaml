#Creation of VPC,EC2,ALB,TG,RDS and SGs
Parameters:

  BizVPCCIDR:
    Description: CIDR Block for VPC
    Type: String
        
  PublicSubnetparam1:
    Description: Public Subnet 1
    Type: String
          
  PublicSubnetparam2:
    Description: Public Subnet 2
    Type: String
           
  PrivateSubnetparam1:
    Description: Private Subnet 1
    Type: String
 
  PrivateSubnetparam2:
    Description: Private Subnet 2
    Type: String
    
  AmazonLinuxAMIID:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
    
  MasterUsername:
    Type: String
    Description: The username for our database.
  
  MasterUserPassword:
    Type: String
    Description: At least 8 printable ASCII characters, execlude @#$%'
    "NoEcho": true

  ParameterGroup:
    Type: String
    Description: The name of the database parameter group already created.
           

Resources:
#VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref BizVPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: BizCom247

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: BizCom247-IG

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetparam1
      AvailabilityZone: us-east-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet 1

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetparam1
      MapPublicIpOnLaunch: false
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: Private Subnet 1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetparam2
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Public Subnet 2

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetparam2
      AvailabilityZone: us-east-1b
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Private Subnet 2

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PublicRT

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: PrivateRT
        
  NatGateway:
    Type: "AWS::EC2::NatGateway"
    Properties: 
      AllocationId: !GetAtt NatPublicIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: NAT-BizCom247
        
  NatPublicIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Tags:
        - Key: Name
          Value: NAT-BizCom247
        
  PrivateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
       RouteTableId: !Ref PrivateRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       NatGatewayId: !Ref NatGateway

  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

#EC2 Instance
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmazonLinuxAMIID
      InstanceType: m5a.large
      AvailabilityZone: us-east-1a
      SecurityGroupIds:
        - !Ref EC2SecurityGroup
      SubnetId: !Ref PrivateSubnet1
      BlockDeviceMappings: 
        - DeviceName: /dev/xvda
          Ebs: 
            VolumeType: gp3
            Iops: 3000
            DeleteOnTermination: true
            VolumeSize: 20
      Tags:
        - Key: Name
          Value: Webserver
      

 # EC2,RDS and ALB Security Groups
  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: ELB Security Group
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: ELB-SG
      
        
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS SecurityGroup
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        SourceSecurityGroupId:
          Fn::GetAtt:
          - EC2SecurityGroup
          - GroupId
      Tags:
        - Key: Name
          Value: RDS-SG

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP traffic
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        SourceSecurityGroupId:
          Fn::GetAtt:
          - ELBSecurityGroup
          - GroupId
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: Webserver-SG

# Target Group, Listener and Application  Load Balancer
  EC2TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 5
      Matcher:
        HttpCode: '200'
      Name: EC2TargetGroup
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: '20'
      Targets:
      - Id: !Ref EC2Instance
        Port: 80
      UnhealthyThresholdCount: 3
      VpcId: !Ref VPC

  ALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref EC2TargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets:
      - !Ref PublicSubnet1
      - !Ref PublicSubnet2
      SecurityGroups:
        - !GetAtt ELBSecurityGroup.GroupId
        
#RDS subnet and Instance    
  RDSDBSubnetGroup:
      Type: "AWS::RDS::DBSubnetGroup"
      Properties:
          DBSubnetGroupDescription: "Subnet Group for mySQL database"
          DBSubnetGroupName: !Sub "${AWS::Region}-BizCom247-subnet-group"
          SubnetIds: 
            - !Ref PrivateSubnet1
            - !Ref PrivateSubnet2
          Tags: 
            - Key: Name
              Value: BizCom247SubnetGroup

  RDSDBInstance:
      Type: AWS::RDS::DBInstance
      Properties:
          DBInstanceIdentifier: BizCom247
          AvailabilityZone: us-east-1a
          AllocatedStorage: 100
          DBInstanceClass: db.r5.large
          Engine: "MYSQL"
          MasterUsername: !Ref MasterUsername
          MasterUserPassword: !Ref MasterUserPassword
          DBParameterGroupName: !Ref ParameterGroup
          BackupRetentionPeriod: 7
          MultiAZ: false
          EngineVersion: 8.0.28
          AutoMinorVersionUpgrade: true
          PubliclyAccessible: false
          StorageType: gp2
          Port: 3306
          StorageEncrypted: true
          CopyTagsToSnapshot: true
          MonitoringInterval: 60
          EnableIAMDatabaseAuthentication: false
          #EnablePerformanceInsights: true
          #PerformanceInsightsRetentionPeriod: 7
          DeletionProtection: true
          DBSubnetGroupName: !Ref RDSDBSubnetGroup
          VPCSecurityGroups: 
            - !Ref EC2SecurityGroup
          MaxAllocatedStorage: 110
          MonitoringRoleArn: !Sub "arn:aws:iam::${AWS::AccountId}:role/rds-monitoring-role"
          Tags: 
            - Key: Name
              Value: BizCom247
